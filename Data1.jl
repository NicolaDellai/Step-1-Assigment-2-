using Random, Distributions
using XLSX

#Get the directory of the current file
dir = @__DIR__


#Hours
h = ["h$i" for i =1:24]
H = length(h)
#Day-Ahead prices and Wind production data
DAfilepath = joinpath(dir, "Data", "DAprices.xlsx")
DA = XLSX.readdata(DAfilepath,"DK2","A2:T25")                    #â‚¬/MWh
DA_s = 20
DA_array = [DA[1:H, c] for c = 1:DA_s]
Wfilepath = joinpath(dir, "Data", "WindProduction.xlsx")
W_RT = XLSX.readdata(Wfilepath,"Normalized","B2:K25")             #MW
W_RT_s = 10
W_RT_array = [W_RT[1:H, c] for c = 1:W_RT_s]
W_Cap = 150 #MW
#=WF = [144.9	65.2	17.9	150.0	95.8	11.3	146.7	100.2	80.9	124.1;
      150.0	73.2	17.5	146.7	108.4	13.5	147.1	111.1	86.5	104.2;
      144.9	72.2	17.4	135.5	119.7	15.3	150.0	144.8	93.0	98.4 ;
      140.3	76.5	15.3	119.2	126.8	16.1	102.4	150.0	104.0	101.3;
      142.7	72.6	16.7	113.4	114.7	19.8	66.7	122.8	117.2	113.1;
      123.2	69.7	21.7	99.6	116.3	23.9	50.5	140.6	129.6	115.6;
      135.4	67.4	28.6	78.3	131.0	29.4	61.4	143.9	142.0	115.5;
      129.7	64.8	30.3	69.7	149.5	38.8	83.3	134.1	143.7	133.3;
      117.0	69.0	23.8	65.7	150.0	39.6	84.8	113.4	135.8	150.0;
      109.7	65.8	12.9	69.6	148.0	34.3	69.5	94.9	130.2	141.9;
      102.3	73.3	8.5	    83.4	145.4	30.1	63.8	79.3	134.6	149.1;
      94.9	95.7	12.2	98.0	137.0	39.5	80.0	61.5	120.2	139.2;
      85.6	105.8	16.6	107.3	130.0	36.1	94.3	56.3	133.7	137.9;
      80.9	92.8	18.5	108.2	128.2	44.0	102.9	55.5	128.8	137.8;
      73.8	103.7	29.8	107.2	128.9	53.4	97.1	51.2	130.7	127.9;
      67.2	125.6	34.1	96.8	128.8	57.4	73.3	44.7	126.4	115.9;
      66.2	150.0	44.6	74.8	126.8	61.9	47.6	36.1	137.2	105.5;
      62.0	132.6	53.7	51.1	117.6	74.0	35.7	27.3	150.0	96.6 ;
      60.3	118.0	60.0	33.8	103.0	94.8	40.0	25.7	147.4	101.3;
      60.3	111.1	91.4	28.7	95.6	105.9	57.6	22.8	146.6	109.2;
      58.9	102.5	115.7	25.8	93.3	116.8	64.3	18.9	145.3	113.4;
      50.9	92.7	117.1	18.9	87.6	134.1	51.0	22.4	112.3	98.1 ;
      47.0	92.6	136.5	15.2	83.4	144.6	53.3	23.7	117.2	82.7 ;
      35.9	101.3	150.0	12.9	79.2	150.0	63.8	20.9	108.3	94.1 ]
W_RT_array = [WF[1:H, c] for c = 1:W_RT_s]

L_DA = [    248.92  175.59	160.1   68.93	88.96 ;
            245.03	175.03	150.01	69.07	91.02 ;
            241.79	175.29	124.27	72.97	88.93 ;
            240.07	175.76	102.54	72.99	97.03 ;
            262.4  	183.85	120.7	73.11	109.92;
            297.8 	225.73	100.05	89.05	172.57;
            242.69	173.75	130.25	72.93	91.15 ;
            313.4	222.08	90.92	87.52	185.06;
            324.94	236.44	77.49 	79.07	112.35;
            252.27	219.15	72.82 	78.9	67.3  ;
            240.8	214.47	56.15 	72.95   23.07 ;
            296.17	244.48	30.07	67.84	15.52 ;
            260.73	214.46	24.76	72.91	10.1  ;
            249.49	214  	8.55  	68.95	0.1   ;
            251.46	207.99	10.05	80.07	0.08  ;
            244.19	252.85	30.07	118.95  10.04 ;
            251.43	241.34	104.03	189.3	23.87 ;
            261.3	346.5	212.12	204.15	116.01;
            316.7	390.01	180.05	210.25	170.06;
            405.02	435.42	180.04	204.13	145.96;
            315	    365.26	170.08	173   	84.48 ;
            244.5	322.7	163.12	176.5	69.77 ;
            249.9	300.73	180.07	182.51	81.05 ;
            250.7	261.86	175.46	168.88	67.27 ]

DA_a = repeat(L_DA,1,4)
DA_array = [DA_a[1:H, c] for c = 1:DA_s]
=#
#=
Generate a series of 24 random binary (two-state) variables, e.g., using a bernoulli distribution, indicating
in every hour of the next day, whether the system in the balancing stage will have a deficit in power supply or an excess
0 = DEFICIT
1 = EXCESS

prob_deficit = 0.5
system_balance = zeros(Int, 24, 3)
for i in 1:3
    system_balance[:,i] = rand(Bernoulli(prob_deficit), 24)
end
=#

SB =[0 0 1;
     0 1 1; 
     1 0 1; 
     0 1 1; 
     1 1 0; 
     1 0 1; 
     1 0 0; 
     0 1 0; 
     1 0 1; 
     0 0 0; 
     1 0 1; 
     1 1 0; 
     1 0 1; 
     1 1 0; 
     1 1 0; 
     0 0 0; 
     1 1 0; 
     1 0 1; 
     0 1 0; 
     1 1 1; 
     1 1 0; 
     0 1 1; 
     1 0 1; 
     1 0 1]

SB_s = 3
SB_array = [SB[1:H, c] for c = 1:SB_s]

#GENERATE THE SCENARIOS 
SC_d = Dict()
counter = 0

struct SCENARIO
    WP::Vector{Float64}
    PR::Vector{Float64}
    IM::Vector{Int64}
end


for w=1:W_RT_s
    for p=1:DA_s
        for i=1:SB_s
            global counter += 1
            SC_d[counter] = SCENARIO(W_RT_array[w], DA_array[p], SB_array[i])
        end
    end
end

S = W_RT_s*DA_s*SB_s

f_WP = zeros(H,S)
f_DA = zeros(H,S)
f_SB = zeros(H,S)

for s=1:S
    f_WP[1:H,s] = SC_d[s].WP
    f_DA[1:H,s] = SC_d[s].PR
    f_SB[1:H,s] = SC_d[s].IM
end


